Algorithm of libfuzzer & sanitizers porting for userland (by joerg)

(1) Run build.sh -T somewhere -V MKLLVM=yes ... tools
(2) Replace somewhere/bin/TARGET-clang with a symlink to a normally
(via cmake) built clang binary.
(3) Run build.sh -T somewhereelse -V MKLLVM=yes -V EXTERNAL_TOOLCHAIN=somewhere ... release

Expectations:
 - prepare a bootstrap.sh script to build a distribution with compiler-rt
   features, that is using EXTERNAL_TOOLCHAIN
 - ship compiler-rt in basesystem
 - add MKSANITIZER build option to prebuild libraries and programs with a
   desired sanitizer

$ make check-fuzzer

********************
Testing: 0 .. 10.. 20.. 30.. 40.. 50.. 60.. 70.. 80.. 90..
Testing Time: 56.25s
********************
Failing Tests (2):
    LLVMFuzzer :: merge-posix.test
    LLVMFuzzer :: trace-malloc-threaded.test

  Expected Passes    : 105
  Unsupported Tests  : 8
  Unexpected Failures: 2

Reason unknown of failures (environment mismatch?) and ignored.

A local WIP kernel patch for tests:

Index: sys/uvm/uvm_map.c
===================================================================
RCS file: /cvsroot/src/sys/uvm/uvm_map.c,v
retrieving revision 1.354
diff -u -r1.354 uvm_map.c
--- sys/uvm/uvm_map.c	6 Feb 2018 09:20:29 -0000	1.354
+++ sys/uvm/uvm_map.c	10 May 2018 01:21:10 -0000
@@ -4972,7 +4972,7 @@
 		return EINVAL;

 	if (oldp) {
-		if (*oldlenp > 1024 * 1024)
+		if (*oldlenp > 10 * 1024 * 1024)
 			return E2BIG;
 		count = *oldlenp / elem_size;
 		if (count == 0)

TODO:
 - Integrating userland programs with libFuzzer:
   1. file
   2. sed
   3. sh
   4. make
   5. ftp
   6. ftpd
   7. bozohttpd
   8. ping / ping6
   9. traceroute / traceroute6
   10. dhcpcd
   11. iscsi-target
 - oom-killer, research a crasher and share with kernel developers (assignee: plusun)
 - oom-killer, add a new ATF test to check oom-killer (assignee: plusun)
 - getrusage(2) fix pullup to -8 or find a workaround for 8.0 (assignee: christos?)
